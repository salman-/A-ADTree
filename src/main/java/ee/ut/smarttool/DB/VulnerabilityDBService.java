package ee.ut.smarttool.DB;

import java.util.ArrayList;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class VulnerabilityDBService extends GeneralCRUDs{

	String name;
	String descrption;
	
    public int insertVulnerability(String name, String description,String level,String impact_id) {
            try {
                String query="insert into  vulnerability (name,description,level,impact_id) values('?','?','?',?)";
                query=QueryMaker.queryFitter(query, QueryMaker.createArgList(name, description,level,impact_id));

                return DB.executeQuery(query);

            } catch (Exception ex) {
                Logger.getLogger(VulnerabilityDBService.class.getName()).log(Level.SEVERE, null, ex);
               JOptionPane.showMessageDialog(null, "Operation failed.Try again", "Failure",JOptionPane.ERROR_MESSAGE );

                return -1;
            }
	}
	
    public int updateVulnerability(String name, String description,String level,String id) {
            try {
                String query="update vulnerability set name='?', description='?',level='?' where id=?";
                query=QueryMaker.queryFitter(query, QueryMaker.createArgList(name,description,level,id)); 
                JOptionPane.showMessageDialog(null, "The record updated successfully", "Success",JOptionPane.INFORMATION_MESSAGE );
                return DB.executeQuery(query);
            } catch (Exception ex) {
              //  Logger.getLogger(VulnerabilityDBService.class.getName()).log(Level.SEVERE, null, ex);
                 JOptionPane.showMessageDialog(null, "Operation failed.Try again", "Failure",JOptionPane.ERROR_MESSAGE );
                 return -1;
            }
    }
    
    public Map<String, ArrayList<String>> selectAllVulnerabilities() throws Exception {
	String query="select  vulnerability.id as id,vulnerability.name as name, vulnerability.description as description,"
                + "vulnerability.level as level ,impact.name as impact,impact.level as impactLevel "
                + "from vulnerability join impact on vulnerability.impact_id=impact.id";
		return DB.selectQuery(query);
	}

}




