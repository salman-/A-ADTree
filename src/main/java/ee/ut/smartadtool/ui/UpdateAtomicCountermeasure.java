/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ee.ut.smartadtool.ui;

import ee.ut.smarttool.DB.CountermeasureDBService;
import ee.ut.smarttool.DB.IDGenerator;
import java.util.ArrayList;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
/**
 *
 * @author Salman
 */
public class UpdateAtomicCountermeasure extends javax.swing.JFrame {

    private final CountermeasureDBService countermeasureDBService;
    private final String id;

    /**
     * Creates new form UpdateAtomicCountermeasure
     */
    public UpdateAtomicCountermeasure(String id) {
        this.id=id;
        countermeasureDBService=new CountermeasureDBService();
        initComponents();
        try {
            Map<String, ArrayList<String>> res = countermeasureDBService.select("countermeasure", id);
            countermeasureNameTF.setText(res.get("name").get(0));
            countermeasureDescriptionTA.setText(res.get("description").get(0));
            countermeasureCostTF.setText(res.get("cost").get(0));
            
        } catch (Exception ex) {
            Logger.getLogger(UpdateAtomicCountermeasure.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        countermeasureNameTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        countermeasureDescriptionTA = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        addAtomicAttack = new javax.swing.JButton();
        probabilityjSpinner = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        countermeasureCostTF = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(null);

        jLabel1.setText("Countermeasure");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(40, 30, 100, 14);
        jPanel1.add(countermeasureNameTF);
        countermeasureNameTF.setBounds(170, 30, 180, 20);

        jLabel2.setText("Description");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(35, 98, 70, 14);

        countermeasureDescriptionTA.setColumns(20);
        countermeasureDescriptionTA.setRows(5);
        jScrollPane1.setViewportView(countermeasureDescriptionTA);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(121, 60, 230, 190);

        jLabel3.setText("Probability");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(410, 70, 90, 14);

        addAtomicAttack.setBackground(new java.awt.Color(0, 153, 204));
        addAtomicAttack.setText("Add Atomic Attack");
        addAtomicAttack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAtomicAttackActionPerformed(evt);
            }
        });
        jPanel1.add(addAtomicAttack);
        addAtomicAttack.setBounds(260, 280, 270, 40);

        probabilityjSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));
        probabilityjSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                probabilityjSpinnerStateChanged(evt);
            }
        });
        jPanel1.add(probabilityjSpinner);
        probabilityjSpinner.setBounds(570, 70, 80, 20);

        jLabel10.setText("Cost");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(420, 210, 80, 20);
        jPanel1.add(countermeasureCostTF);
        countermeasureCostTF.setBounds(570, 210, 80, 20);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 738, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 718, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 405, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addAtomicAttackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAtomicAttackActionPerformed
        try {

            String name=countermeasureNameTF.getText();
            String description=countermeasureDescriptionTA.getText();
          
            String cost=countermeasureCostTF.getText();
            String probaility=probabilityjSpinner.getValue().toString();
      
            countermeasureDBService.updateCountermeasure( id, name, description, cost, probaility);
            JOptionPane.showMessageDialog(null, "The record is inserted successfully.", "Success",JOptionPane.INFORMATION_MESSAGE );

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "The operation failed. Fill all the fields and try again", "Fialure",JOptionPane.ERROR_MESSAGE );
//            Logger.getLogger(UpdateAtomicCountermeasure.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addAtomicAttackActionPerformed

    private void probabilityjSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_probabilityjSpinnerStateChanged
    /*    chartDrawer(Integer.valueOf(probabilityjSpinner.getValue().toString()));
        this.getContentPane().validate();
        this.getContentPane().repaint();*/
    }//GEN-LAST:event_probabilityjSpinnerStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAtomicAttack;
    private javax.swing.JTextField countermeasureCostTF;
    private javax.swing.JTextArea countermeasureDescriptionTA;
    private javax.swing.JTextField countermeasureNameTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner probabilityjSpinner;
    // End of variables declaration//GEN-END:variables
}
