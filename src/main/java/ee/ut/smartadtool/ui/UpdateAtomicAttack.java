/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ee.ut.smartadtool.ui;

import ee.ut.smarttool.DB.AssetDBSerivice;
import ee.ut.smarttool.DB.AttackDBService;
import ee.ut.smarttool.DB.ImpactDBService;
import ee.ut.smarttool.DB.VulnerabilityDBService;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import org.knowm.xchart.BitmapEncoder;
import org.knowm.xchart.PieChart;
import org.knowm.xchart.PieChartBuilder;
import org.knowm.xchart.SwingWrapper;
import org.knowm.xchart.style.PieStyler;
import org.knowm.xchart.style.Styler;

/**
 *
 * @author Salman
 */
public class UpdateAtomicAttack extends javax.swing.JFrame {

    VulnerabilityDBService vulDBSerivce;
    AssetDBSerivice assetDBSerivce;
    AttackDBService attackDBService; 
    ImpactDBService impactDBService;
    private final String id;

    /**
     * Creates new form UpdateAtomicAttack
     */
    public UpdateAtomicAttack(String id) {
        vulDBSerivce   =new VulnerabilityDBService();
        assetDBSerivce =new AssetDBSerivice();
        attackDBService=new AttackDBService();
        impactDBService=new ImpactDBService();
        this.id=id;
        initComponents();
        try {
            System.out.println("ID: "+id);
            Map<String, ArrayList<String>> res = attackDBService.select("attack", id);
            
            attackNameTF.setText((String) res.get("name").toArray()[0]);
            attackDescriptionTA.setText((String) res.get("description").toArray()[0]);
            costOfAttackTF.setText((String) res.get("costOfAttack").toArray()[0]);
            costOfDamageTF.setText((String) res.get("costOfDamage").toArray()[0]);
            
            
             res = assetDBSerivce.selectAll("asset");
            DefaultComboBoxModel model = new DefaultComboBoxModel( res.get("name").toArray() );
             targetedAssetCombo.setModel( model );
             
        } catch (Exception ex) {
            Logger.getLogger(UpdateAtomicAttack.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        attackNameTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        attackDescriptionTA = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        targetedAssetCombo = new javax.swing.JComboBox<>();
        addAtomicAttack = new javax.swing.JButton();
        probabilityjSpinner = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        costOfAttackTF = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        costOfDamageTF = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(null);

        jLabel1.setText("Attack");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(35, 25, 60, 14);
        jPanel1.add(attackNameTF);
        attackNameTF.setBounds(140, 30, 190, 20);

        jLabel2.setText("Description");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(35, 98, 70, 14);

        attackDescriptionTA.setColumns(20);
        attackDescriptionTA.setRows(5);
        jScrollPane1.setViewportView(attackDescriptionTA);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(121, 60, 230, 130);

        jLabel3.setText("Probability");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(390, 90, 90, 14);

        jLabel4.setText("Targeted Asset");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(390, 40, 110, 14);

        targetedAssetCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(targetedAssetCombo);
        targetedAssetCombo.setBounds(500, 40, 168, 20);

        addAtomicAttack.setBackground(new java.awt.Color(255, 0, 51));
        addAtomicAttack.setText("Add Atomic Attack");
        addAtomicAttack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAtomicAttackActionPerformed(evt);
            }
        });
        jPanel1.add(addAtomicAttack);
        addAtomicAttack.setBounds(220, 270, 270, 40);

        probabilityjSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));
        probabilityjSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                probabilityjSpinnerStateChanged(evt);
            }
        });
        jPanel1.add(probabilityjSpinner);
        probabilityjSpinner.setBounds(520, 80, 80, 20);

        jLabel10.setText("Cost of Attack");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(390, 130, 80, 20);
        jPanel1.add(costOfAttackTF);
        costOfAttackTF.setBounds(520, 130, 110, 20);

        jLabel11.setText("Cost of Damage (Gain)");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(390, 180, 140, 14);
        jPanel1.add(costOfDamageTF);
        costOfDamageTF.setBounds(520, 170, 80, 20);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 705, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 682, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 462, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addAtomicAttackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAtomicAttackActionPerformed
        try {

            String name=attackNameTF.getText();
            String description=attackDescriptionTA.getText();
            String costOfAttack=costOfAttackTF.getText();
            String costOfDamage=costOfDamageTF.getText();
            String probaility=probabilityjSpinner.getValue().toString();

            if(targetedAssetCombo.getSelectedItem().toString()!=null){
                String asset = targetedAssetCombo.getSelectedItem().toString();
                String assetId = assetDBSerivce.selectIdFromField("asset","name","'"+asset+"'");

                //     id =IDGenerator.nextId();
                //     int res = attackDBService.insertAttack(id,name,description,probaility,costOfDamage,costOfAttack, assetId);
                int res = attackDBService.updateAttack(name,description,probaility,costOfDamage,costOfAttack, assetId,this.id);

                JOptionPane.showMessageDialog(null, "The record is inserted successfully.", "Success",JOptionPane.INFORMATION_MESSAGE );
            }else
            JOptionPane.showMessageDialog(null, "Make sure you have inserted asset records and try again", "Failure",JOptionPane.ERROR_MESSAGE );

        } catch (Exception ex) {
            Logger.getLogger(AtomicAttack.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addAtomicAttackActionPerformed

    private void probabilityjSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_probabilityjSpinnerStateChanged
        /*  chartDrawer(Integer.valueOf(probabilityjSpinner.getValue().toString()));
        this.getContentPane().validate();
        this.getContentPane().repaint(); */
    }//GEN-LAST:event_probabilityjSpinnerStateChanged

      public void chartDrawer(int success){
        PieChart chart = new PieChartBuilder().width(300).height(210).title("Failure Vs Success").theme(Styler.ChartTheme.GGPlot2).build();

    // Customize Chart
    chart.getStyler().setLegendVisible(false);
    chart.getStyler().setAnnotationType(PieStyler.AnnotationType.LabelAndPercentage);
    chart.getStyler().setAnnotationDistance(1.15);
    chart.getStyler().setPlotContentSize(.7);
    chart.getStyler().setStartAngleInDegrees(90);

    // Series
    chart.addSeries("Success", success);
    chart.addSeries("Failure", (100-success));


        try {
            // Show it
             new SwingWrapper(chart).displayChart();
             
            BitmapEncoder.saveBitmap(chart, "C://pie-pic/img.png", BitmapEncoder.BitmapFormat.PNG);
        } catch (IOException ex) {
            Logger.getLogger(AtomicAttack.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Path not found");
        } 
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAtomicAttack;
    private javax.swing.JTextArea attackDescriptionTA;
    private javax.swing.JTextField attackNameTF;
    private javax.swing.JTextField costOfAttackTF;
    private javax.swing.JTextField costOfDamageTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner probabilityjSpinner;
    private javax.swing.JComboBox<String> targetedAssetCombo;
    // End of variables declaration//GEN-END:variables
}
